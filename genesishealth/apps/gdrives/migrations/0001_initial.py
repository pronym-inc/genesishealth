# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-25 20:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_auto_20160225_1401'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodPressureDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meid', models.CharField(max_length=40)),
                ('device_id', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='GDrive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meid', models.CharField(max_length=16, unique=True)),
                ('device_type', models.CharField(blank=True, default=b'glucose', max_length=100)),
                ('device_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('verizon_status', models.CharField(blank=True, choices=[(b'waiting-active', b'Waiting to be activated'), (b'request-active', b'Request to activate sent'), (b'active', b'Active'), (b'active-and-working', b'Active and working'), (b'waiting-deactive', b'Waiting to be de-activated'), (b'deactive', b'Inactive'), (b'new', b'New')], default=b'new', max_length=100)),
                ('verizon_update_attempts', models.IntegerField(blank=True, default=0)),
                ('demo', models.BooleanField(default=False)),
                ('is_verizon_testing_device', models.BooleanField(default=False)),
                ('is_verizon_monitoring_device', models.BooleanField(default=False)),
                ('is_scalability_device', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Device',
            },
        ),
        migrations.CreateModel(
            name='GDriveLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meid', models.CharField(max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('reading_datetime_utc', models.DateTimeField(db_index=True, null=True)),
                ('glucose_value', models.CharField(max_length=255, null=True)),
                ('raw_data', models.TextField()),
                ('successful', models.BooleanField()),
                ('status', models.CharField(max_length=255, null=True)),
                ('hide_from_control_log', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GDriveTransmissionLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('content', models.TextField()),
                ('decrypted_content', models.TextField(default=b'')),
                ('error', models.TextField(default=b'')),
                ('processing_succeeded', models.BooleanField()),
                ('success_sent_to_client', models.BooleanField()),
                ('reading_server', models.CharField(max_length=255, null=True)),
                ('recovered', models.BooleanField(default=False)),
                ('recovered_time', models.DateTimeField(null=True)),
                ('meid', models.CharField(max_length=255, null=True)),
                ('glucose_value', models.IntegerField(null=True)),
                ('resolution', models.CharField(choices=[(b'unknown_device', b'Unknown Device'), (b'no_patient', b'No Patient Assigned to Device'), (b'valid', b'Successfully Processed'), (b'invalid', b'Invalid Reading'), (b'duplicate', b'Duplicate Reading'), (b'processing_failed', b'Processing Failed'), (b'invalid_measure', b'Invalid Measurement Type'), (b'unresolved', b'Unresolved')], default=b'unresolved', max_length=255, null=True)),
                ('sent_to_api', models.BooleanField(default=False)),
                ('received_by_api', models.BooleanField(default=False)),
                ('hide_from_qa_log', models.BooleanField(default=False)),
                ('hide_from_orphaned_log', models.BooleanField(default=False)),
                ('associated_patient_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.PatientProfile')),
            ],
        ),
        migrations.CreateModel(
            name='WeightDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meid', models.CharField(max_length=40)),
                ('device_id', models.CharField(max_length=40)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_devices', to='accounts.GenesisGroup')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
